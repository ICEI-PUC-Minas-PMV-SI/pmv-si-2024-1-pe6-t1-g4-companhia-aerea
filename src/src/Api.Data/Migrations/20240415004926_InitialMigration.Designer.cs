// <auto-generated />
using System;
using Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20240415004926_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Api.Domain.Entities.CustomerAggregate.AddressEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("City")
                        .HasColumnType("longtext");

                    b.Property<string>("Complement")
                        .HasColumnType("longtext");

                    b.Property<string>("Country")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Neighborhood")
                        .HasColumnType("longtext");

                    b.Property<string>("Number")
                        .HasColumnType("longtext");

                    b.Property<string>("State")
                        .HasColumnType("longtext");

                    b.Property<string>("Street")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Address", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("22ca315c-e483-48c4-9483-d1c0904fee9d"),
                            City = "Belo Horizonte",
                            Complement = "Casa",
                            Country = "Brasil",
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1755),
                            Neighborhood = "Esmelo",
                            Number = "0",
                            State = "MG",
                            Street = "Rua dos Bobos",
                            ZipCode = "31615-520"
                        },
                        new
                        {
                            Id = new Guid("8ff920eb-58f6-4b4c-a4f1-2e4bf62a7741"),
                            City = "Brasília",
                            Complement = "Apartamento",
                            Country = "Brasil",
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1759),
                            Neighborhood = "Asa Sul",
                            Number = "S/N",
                            State = "DF",
                            Street = "Quadra 300",
                            ZipCode = "70000-000"
                        },
                        new
                        {
                            Id = new Guid("e82a1e06-57d7-4b2c-b8b6-1e7b013a2d05"),
                            City = "São Paulo",
                            Complement = "Bloco B",
                            Country = "Brasil",
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1762),
                            Neighborhood = "Vila Mariana",
                            Number = "1000",
                            State = "SP",
                            Street = "Avenida Paulista",
                            ZipCode = "04101-000"
                        },
                        new
                        {
                            Id = new Guid("40b3e7df-4ff9-4d8d-bc2d-7f5c6481ff1d"),
                            City = "Rio de Janeiro",
                            Complement = "Casa 2",
                            Country = "Brasil",
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1765),
                            Neighborhood = "Tijuca",
                            Number = "123",
                            State = "RJ",
                            Street = "Rua Conde de Bonfim",
                            ZipCode = "20540-060"
                        },
                        new
                        {
                            Id = new Guid("cd04928a-5934-4a9a-a68e-7cf38f2b8573"),
                            City = "Belo Horizonte",
                            Complement = "Sala 301",
                            Country = "Brasil",
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1768),
                            Neighborhood = "Centro",
                            Number = "250",
                            State = "MG",
                            Street = "Avenida Afonso Pena",
                            ZipCode = "30140-061"
                        },
                        new
                        {
                            Id = new Guid("f2427d11-9e8e-4cf8-976a-482207798ff6"),
                            City = "Piracicaba",
                            Complement = "Loja",
                            Country = "Brasil",
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1772),
                            Neighborhood = "Centro",
                            Number = "789",
                            State = "SP",
                            Street = "Rua do Rosário",
                            ZipCode = "13400-000"
                        });
                });

            modelBuilder.Entity("Api.Domain.Entities.CustomerAggregate.CareerEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<double>("AverageWage")
                        .HasColumnType("double");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Note")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Career", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("eb15eaef-b653-4ccc-a0cd-b2720da41d55"),
                            AverageWage = 7650.0,
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1803),
                            Description = "Desenvolvedor de Software",
                            Note = ""
                        },
                        new
                        {
                            Id = new Guid("46e17017-2f85-4968-80b6-4ff1c0fc2db7"),
                            AverageWage = 9500.0,
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1806),
                            Description = "Engenheiro Civil",
                            Note = ""
                        },
                        new
                        {
                            Id = new Guid("7a4a0108-7d57-4485-a1cf-ae7b239c1573"),
                            AverageWage = 18000.0,
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1808),
                            Description = "Médico Cirurgião",
                            Note = ""
                        },
                        new
                        {
                            Id = new Guid("f22844bb-7601-439d-b6f0-d6cc1d510e0e"),
                            AverageWage = 8500.0,
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1810),
                            Description = "Professor Universitário",
                            Note = ""
                        },
                        new
                        {
                            Id = new Guid("30254dd1-bd95-4e12-9e7c-5bdc40aa61b1"),
                            AverageWage = 9500.0,
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1812),
                            Description = "Advogado",
                            Note = ""
                        },
                        new
                        {
                            Id = new Guid("82301e43-8ec9-4e7f-8a5a-3c9bc2a1a660"),
                            AverageWage = 5500.0,
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1813),
                            Description = "Enfermeiro",
                            Note = ""
                        },
                        new
                        {
                            Id = new Guid("ebbe4f7a-f025-4db4-8b52-ae0a0e3d09f7"),
                            AverageWage = 8500.0,
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1815),
                            Description = "Analista Financeiro",
                            Note = ""
                        },
                        new
                        {
                            Id = new Guid("0ec49ed6-1a07-4e63-b3d2-4ac3cb56a962"),
                            AverageWage = 6000.0,
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1817),
                            Description = "Designer Gráfico",
                            Note = ""
                        },
                        new
                        {
                            Id = new Guid("a882f777-00a3-4b98-92e8-625ca8d444c0"),
                            AverageWage = 7500.0,
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1819),
                            Description = "Farmacêutico",
                            Note = ""
                        },
                        new
                        {
                            Id = new Guid("506cb080-4a8b-42a3-9f34-bde6e1a40e9b"),
                            AverageWage = 6000.0,
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1823),
                            Description = "Chef de Cozinha",
                            Note = ""
                        },
                        new
                        {
                            Id = new Guid("61ad6489-fb49-4782-8c4b-ef9b7fb5b4c7"),
                            AverageWage = 8500.0,
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1825),
                            Description = "Engenheiro de Software",
                            Note = ""
                        },
                        new
                        {
                            Id = new Guid("ba8c526d-ec49-4469-a0e6-01d63f68712f"),
                            AverageWage = 7000.0,
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1829),
                            Description = "Psicólogo Clínico",
                            Note = ""
                        },
                        new
                        {
                            Id = new Guid("fd484e11-26b4-4e54-9f1e-66e3e529180d"),
                            AverageWage = 9000.0,
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1831),
                            Description = "Engenheiro Mecânico",
                            Note = ""
                        },
                        new
                        {
                            Id = new Guid("8e088726-ae8b-4211-8c19-cb20f97a0948"),
                            AverageWage = 12000.0,
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1832),
                            Description = "Piloto de Avião",
                            Note = ""
                        },
                        new
                        {
                            Id = new Guid("6371818f-7e95-4c65-a67f-19b74f87f47e"),
                            AverageWage = 8000.0,
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1834),
                            Description = "Arquiteto",
                            Note = ""
                        },
                        new
                        {
                            Id = new Guid("79295cb4-f755-4575-8049-f13e74cb19f4"),
                            AverageWage = 7800.0,
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1836),
                            Description = "Analista de Sistemas",
                            Note = ""
                        },
                        new
                        {
                            Id = new Guid("5af956fc-1bb9-44d0-9ee1-6435ff7e5de2"),
                            AverageWage = 8500.0,
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1838),
                            Description = "Dentista",
                            Note = ""
                        },
                        new
                        {
                            Id = new Guid("c55e8fb0-df1f-43e8-8e07-f81a4463d0a4"),
                            AverageWage = 8000.0,
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1861),
                            Description = "Contador",
                            Note = ""
                        },
                        new
                        {
                            Id = new Guid("8b3e12cf-8a0b-4d96-8a29-7614bf18d2bc"),
                            AverageWage = 5000.0,
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1863),
                            Description = "Fotógrafo",
                            Note = ""
                        },
                        new
                        {
                            Id = new Guid("4b42eeed-b9c4-43e2-8151-eb18df5f1e2b"),
                            AverageWage = 7000.0,
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1865),
                            Description = "Analista de Marketing",
                            Note = ""
                        },
                        new
                        {
                            Id = new Guid("2fc86ba3-6479-454a-9bc7-9e8ec1b78492"),
                            AverageWage = 2800.0,
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1867),
                            Description = "Auxiliar Administrativo",
                            Note = ""
                        },
                        new
                        {
                            Id = new Guid("d60ed8ae-6d30-4c2a-b946-6c751a18b871"),
                            AverageWage = 2500.0,
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1869),
                            Description = "Atendente de Telemarketing",
                            Note = ""
                        },
                        new
                        {
                            Id = new Guid("671892c6-002f-4a48-9913-3b10e20697d3"),
                            AverageWage = 3000.0,
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1871),
                            Description = "Recepcionista",
                            Note = ""
                        },
                        new
                        {
                            Id = new Guid("94edfb10-7361-4708-924f-50b3b3ff17d6"),
                            AverageWage = 2000.0,
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1874),
                            Description = "Auxiliar de Limpeza",
                            Note = ""
                        },
                        new
                        {
                            Id = new Guid("a76f70c6-6c2d-4d09-b9a0-7dc7f21ef16d"),
                            AverageWage = 1800.0,
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1876),
                            Description = "Ajudante de Cozinha",
                            Note = ""
                        });
                });

            modelBuilder.Entity("Api.Domain.Entities.CustomerAggregate.CustomerEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("CareerId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateBirth")
                        .HasColumnType("DATE");

                    b.Property<string>("Document")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<Guid>("NationalityId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PhoneId")
                        .HasColumnType("char(36)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("CareerId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("PhoneId");

                    b.HasIndex("UserId");

                    b.ToTable("Customer", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("12c55a0e-771a-41bb-9b2a-9094db0ee7f8"),
                            AddressId = new Guid("22ca315c-e483-48c4-9483-d1c0904fee9d"),
                            CareerId = new Guid("eb15eaef-b653-4ccc-a0cd-b2720da41d55"),
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(2024),
                            DateBirth = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "116.987.659-96",
                            Email = "customer01@email.com",
                            FirstName = "Customer 01 do Adm ",
                            LastName = "Last Name Customer 01",
                            NationalityId = new Guid("e8460494-91aa-4b03-8fd8-aefd7ad63164"),
                            PhoneId = new Guid("f56171aa-4179-4668-9618-ca1676679449"),
                            StatusId = 1,
                            UserId = new Guid("12c55a0e-771a-41bb-9b2a-9094db0ee7f8")
                        },
                        new
                        {
                            Id = new Guid("7c259bf1-ee8b-4d1d-949e-b4a3aca134c4"),
                            AddressId = new Guid("8ff920eb-58f6-4b4c-a4f1-2e4bf62a7741"),
                            CareerId = new Guid("7a4a0108-7d57-4485-a1cf-ae7b239c1573"),
                            CreatedAt = new DateTime(2024, 4, 15, 2, 49, 25, 786, DateTimeKind.Utc).AddTicks(2037),
                            DateBirth = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "189.847.392-05",
                            Email = "customer02@email.com",
                            FirstName = "Customer 02 do Adm ",
                            LastName = "Last Name Customer 02",
                            NationalityId = new Guid("e8460494-91aa-4b03-8fd8-aefd7ad63164"),
                            PhoneId = new Guid("316b3c7b-c399-403d-bd7e-98a085fb5d3a"),
                            StatusId = 1,
                            UserId = new Guid("12c55a0e-771a-41bb-9b2a-9094db0ee7f8")
                        },
                        new
                        {
                            Id = new Guid("039cd0f7-1506-4daf-9648-be0fa40434fb"),
                            AddressId = new Guid("e82a1e06-57d7-4b2c-b8b6-1e7b013a2d05"),
                            CreatedAt = new DateTime(2024, 4, 15, 0, 59, 25, 786, DateTimeKind.Utc).AddTicks(2053),
                            DateBirth = new DateTime(1994, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "543.609.281-49",
                            Email = "customer03@email.com",
                            FirstName = "Customer 03 do Adm ",
                            LastName = "Last Name Customer 03",
                            NationalityId = new Guid("e8460494-91aa-4b03-8fd8-aefd7ad63164"),
                            PhoneId = new Guid("73ed0e45-4740-4a6c-9348-fd97b405da2d"),
                            StatusId = 1,
                            UserId = new Guid("12c55a0e-771a-41bb-9b2a-9094db0ee7f8")
                        },
                        new
                        {
                            Id = new Guid("f3b171ea-047a-4e9d-a282-4115a76f419f"),
                            AddressId = new Guid("40b3e7df-4ff9-4d8d-bc2d-7f5c6481ff1d"),
                            CareerId = new Guid("0ec49ed6-1a07-4e63-b3d2-4ac3cb56a962"),
                            CreatedAt = new DateTime(2024, 4, 15, 1, 49, 25, 786, DateTimeKind.Utc).AddTicks(2093),
                            DateBirth = new DateTime(1990, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "786.123.549-02",
                            Email = "customer01r@email.com",
                            FirstName = "Customer 01 do regular 01 ",
                            LastName = "Last Name Customer 01R",
                            NationalityId = new Guid("1c52d7f7-49ac-45b3-a3fc-8375068e97ae"),
                            PhoneId = new Guid("ec1ab1c0-c72a-4030-89f0-9833e9f621f4"),
                            StatusId = 1,
                            UserId = new Guid("5e1849cd-ddee-4982-b4c6-8d4b3c20b041")
                        },
                        new
                        {
                            Id = new Guid("fdf6777d-f6d3-4c54-96c3-4c498aa0903b"),
                            AddressId = new Guid("cd04928a-5934-4a9a-a68e-7cf38f2b8573"),
                            CareerId = new Guid("ba8c526d-ec49-4469-a0e6-01d63f68712f"),
                            CreatedAt = new DateTime(2024, 4, 15, 3, 49, 25, 786, DateTimeKind.Utc).AddTicks(2105),
                            DateBirth = new DateTime(1994, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "952.746.830-61",
                            Email = "customer02r@email.com",
                            FirstName = "Customer 02 do regular 01 ",
                            LastName = "Last Name Customer 02R",
                            NationalityId = new Guid("1c52d7f7-49ac-45b3-a3fc-8375068e97ae"),
                            PhoneId = new Guid("a52ef79d-f22c-4a44-8d92-2fcf4823188b"),
                            StatusId = 1,
                            UserId = new Guid("5e1849cd-ddee-4982-b4c6-8d4b3c20b041")
                        },
                        new
                        {
                            Id = new Guid("0c0e881c-61cf-4d12-8788-94e118d22177"),
                            AddressId = new Guid("f2427d11-9e8e-4cf8-976a-482207798ff6"),
                            CareerId = new Guid("ba8c526d-ec49-4469-a0e6-01d63f68712f"),
                            CreatedAt = new DateTime(2024, 4, 15, 3, 49, 25, 786, DateTimeKind.Utc).AddTicks(2115),
                            DateBirth = new DateTime(1994, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "367.195.482-34",
                            Email = "customer03r@email.com",
                            FirstName = "Customer 03 do regular 01 ",
                            LastName = "Last Name Customer 02R",
                            NationalityId = new Guid("1c52d7f7-49ac-45b3-a3fc-8375068e97ae"),
                            PhoneId = new Guid("2b2f3f5f-dfb9-4fe6-98a2-6664b9c6ab08"),
                            StatusId = 1,
                            UserId = new Guid("5e1849cd-ddee-4982-b4c6-8d4b3c20b041")
                        });
                });

            modelBuilder.Entity("Api.Domain.Entities.CustomerAggregate.NationalityEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Note")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Nationality", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e8460494-91aa-4b03-8fd8-aefd7ad63164"),
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1906),
                            Description = "Brasileira",
                            Note = ""
                        },
                        new
                        {
                            Id = new Guid("66d38f80-5b2c-409e-b4f6-68b017af22db"),
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1908),
                            Description = "Americana",
                            Note = ""
                        },
                        new
                        {
                            Id = new Guid("ae7c6886-4a8c-4878-8ff6-5755046a93d8"),
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1911),
                            Description = "Canadense",
                            Note = ""
                        },
                        new
                        {
                            Id = new Guid("f700bd3b-1256-4f55-a682-d1e7c10f59a1"),
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1912),
                            Description = "Mexicana",
                            Note = ""
                        },
                        new
                        {
                            Id = new Guid("1c52d7f7-49ac-45b3-a3fc-8375068e97ae"),
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1914),
                            Description = "Argentina",
                            Note = ""
                        },
                        new
                        {
                            Id = new Guid("5f5e0a2c-4201-4a2e-80e5-85d1ee8cf077"),
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1916),
                            Description = "Chilena",
                            Note = ""
                        },
                        new
                        {
                            Id = new Guid("0a3a3f5f-bf97-4a64-bd07-1b45468de336"),
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1918),
                            Description = "Inglesa",
                            Note = ""
                        },
                        new
                        {
                            Id = new Guid("334f5a76-3b27-45f0-8371-75f36a7381c2"),
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1920),
                            Description = "Francesa",
                            Note = ""
                        },
                        new
                        {
                            Id = new Guid("d8f23df8-d9f6-4696-9b0b-1613c1e4ef63"),
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1921),
                            Description = "Italiana",
                            Note = ""
                        },
                        new
                        {
                            Id = new Guid("ca7ae9c3-62f3-4a05-b7ac-0c6e3f29b10e"),
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1923),
                            Description = "Alemã",
                            Note = ""
                        },
                        new
                        {
                            Id = new Guid("96e01522-d4b5-4d07-bfe6-f4c6151b2f33"),
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1924),
                            Description = "Espanhola",
                            Note = ""
                        },
                        new
                        {
                            Id = new Guid("f920c11e-f6f7-42a3-b3bc-83701241c781"),
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1926),
                            Description = "Portuguesa",
                            Note = ""
                        },
                        new
                        {
                            Id = new Guid("c301e7a7-d90e-47e3-b241-3fdad89d0b79"),
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1928),
                            Description = "Sueca",
                            Note = ""
                        },
                        new
                        {
                            Id = new Guid("7ff9a21e-3ff2-4ef0-aac1-1181a6ff7a78"),
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1929),
                            Description = "Norueguesa",
                            Note = ""
                        },
                        new
                        {
                            Id = new Guid("bd609feb-4d8e-4384-bcd1-7641fb4b3e1a"),
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1930),
                            Description = "Japonesa",
                            Note = ""
                        },
                        new
                        {
                            Id = new Guid("ec91c3d3-fb1c-44d1-a01e-af4bb1a4f3f5"),
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1932),
                            Description = "Chinesa",
                            Note = ""
                        },
                        new
                        {
                            Id = new Guid("a5658e1d-61ff-4e48-9a38-95bfb631e7a1"),
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1934),
                            Description = "Russa",
                            Note = ""
                        },
                        new
                        {
                            Id = new Guid("0e61a8b8-0a65-4e3e-9203-dbe526054bb4"),
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1935),
                            Description = "Indiana",
                            Note = ""
                        },
                        new
                        {
                            Id = new Guid("bb179145-250f-4260-80e0-232e5743ec7b"),
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1937),
                            Description = "Coreana",
                            Note = ""
                        },
                        new
                        {
                            Id = new Guid("cd1b540e-119a-4417-bf69-6fd4f8a558c1"),
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1938),
                            Description = "Australiana",
                            Note = ""
                        });
                });

            modelBuilder.Entity("Api.Domain.Entities.CustomerAggregate.PhoneEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CountryCode")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DDD")
                        .HasColumnType("longtext");

                    b.Property<string>("Number")
                        .HasColumnType("longtext");

                    b.Property<int>("TypePhone")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Phone", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("f56171aa-4179-4668-9618-ca1676679449"),
                            CountryCode = "55",
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1965),
                            DDD = "31",
                            Number = "9 9944-2621",
                            TypePhone = 1
                        },
                        new
                        {
                            Id = new Guid("316b3c7b-c399-403d-bd7e-98a085fb5d3a"),
                            CountryCode = "55",
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1967),
                            DDD = "11",
                            Number = "3123-4567",
                            TypePhone = 2
                        },
                        new
                        {
                            Id = new Guid("73ed0e45-4740-4a6c-9348-fd97b405da2d"),
                            CountryCode = "55",
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1970),
                            DDD = "21",
                            Number = "98765-4321",
                            TypePhone = 3
                        },
                        new
                        {
                            Id = new Guid("ec1ab1c0-c72a-4030-89f0-9833e9f621f4"),
                            CountryCode = "55",
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1972),
                            DDD = "41",
                            Number = "99988-7766",
                            TypePhone = 1
                        },
                        new
                        {
                            Id = new Guid("a52ef79d-f22c-4a44-8d92-2fcf4823188b"),
                            CountryCode = "55",
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1974),
                            DDD = "51",
                            Number = "3030-2020",
                            TypePhone = 2
                        },
                        new
                        {
                            Id = new Guid("2b2f3f5f-dfb9-4fe6-98a2-6664b9c6ab08"),
                            CountryCode = "55",
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1975),
                            DDD = "61",
                            Number = "8765-4321",
                            TypePhone = 3
                        });
                });

            modelBuilder.Entity("Api.Domain.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateBirth")
                        .HasColumnType("DATE");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TypeUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("12c55a0e-771a-41bb-9b2a-9094db0ee7f8"),
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 388, DateTimeKind.Utc).AddTicks(6319),
                            DateBirth = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user1@email.com",
                            FirstName = "User Adm",
                            LastName = "Adm Master",
                            Password = "$2a$11$uzG7Rg2i91chX.1oTbT6Wem8j3DdaoCbl8zFwP2vL.Tbwalc/RqSe",
                            Status = 1,
                            TypeUser = 1
                        },
                        new
                        {
                            Id = new Guid("5e1849cd-ddee-4982-b4c6-8d4b3c20b041"),
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 587, DateTimeKind.Utc).AddTicks(4630),
                            DateBirth = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user2@email.com",
                            FirstName = "User Regular",
                            LastName = "Last Regular",
                            Password = "$2a$11$GZy2GbteruQNLjLBIZmR7OMXWyTZ3Mx86eDM.r0maBx5R/LKebnUW",
                            Status = 1,
                            TypeUser = 2
                        },
                        new
                        {
                            Id = new Guid("7fc20e97-a58d-4c92-b2c2-a41eedd931e1"),
                            CreatedAt = new DateTime(2024, 4, 15, 0, 49, 25, 786, DateTimeKind.Utc).AddTicks(1363),
                            DateBirth = new DateTime(1992, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jose@email.com",
                            FirstName = "Jose",
                            LastName = "Pereira",
                            Password = "$2a$11$qmp4gLcXVaDhx8vq3iFDrO8ngkwR7ftNN.RowemOJg9ZNrzmg9vxi",
                            Status = 1,
                            TypeUser = 2
                        });
                });

            modelBuilder.Entity("Api.Domain.Entities.CustomerAggregate.CustomerEntity", b =>
                {
                    b.HasOne("Api.Domain.Entities.CustomerAggregate.AddressEntity", null)
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Api.Domain.Entities.CustomerAggregate.CareerEntity", null)
                        .WithMany()
                        .HasForeignKey("CareerId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Api.Domain.Entities.CustomerAggregate.PhoneEntity", null)
                        .WithMany()
                        .HasForeignKey("PhoneId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Api.Domain.Entities.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
